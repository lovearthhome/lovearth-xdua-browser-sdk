"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = __importDefault(require("lodash"));
const uuid_1 = __importDefault(require("uuid"));
function getSignHeaderKeys(headers = {}, signHeaders = {}) {
    const keys = Object.keys(headers).sort();
    const signKeys = [];
    for (let ii in keys) {
        const key = keys[ii];
        if (key.startsWith('x-ca-') || lodash_1.default.has(signHeaders, key)) {
            if (key === 'accept' || key === 'content-type' || key === 'date') {
                continue;
            }
            signKeys.push(key);
        }
    }
    return signKeys.sort();
}
exports.getSignHeaderKeys = getSignHeaderKeys;
function buildHeaders(headers = {}, signHeaders = {}, appKey, stage) {
    return Object.assign({
        'x-ca-timestamp': Date.now(),
        'x-ca-version': 1,
        'x-ca-key': appKey,
        'x-ca-nonce': uuid_1.default.v4(),
        'x-ca-stage': stage,
    }, headers, signHeaders);
}
exports.buildHeaders = buildHeaders;
function getSignedHeadersString(signHeaders, headers) {
    const list = [];
    for (let ii in signHeaders) {
        const key = signHeaders[ii];
        list.push(key + ':' + headers[key]);
    }
    return list.join('\n');
}
exports.getSignedHeadersString = getSignedHeadersString;
//# sourceMappingURL=headers.js.map