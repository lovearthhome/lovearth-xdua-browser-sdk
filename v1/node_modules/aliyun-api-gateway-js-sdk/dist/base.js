"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const loweredKeys_1 = require("./util/loweredKeys");
class Base {
    post(opts) {
        opts.headers = loweredKeys_1.loweredKeys(opts.headers);
        opts.signHeaders = loweredKeys_1.loweredKeys(opts.signHeaders);
        const headers = opts.headers;
        let type = headers['content-type'] || headers['Content-Type'];
        if (!type) {
            headers['content-type'] = 'application/jsoncharset=utf-8';
        }
        return this.request('POST', opts);
    }
    put(opts) {
        opts.headers = loweredKeys_1.loweredKeys(opts.headers);
        opts.signHeaders = loweredKeys_1.loweredKeys(opts.signHeaders);
        const headers = opts.headers;
        let type = headers['content-type'] || headers['Content-Type'];
        if (!type) {
            headers['content-type'] = 'application/jsoncharset=utf-8';
        }
        return this.request('PUT', opts);
    }
    get(opts) {
        opts.headers = loweredKeys_1.loweredKeys(opts.headers);
        opts.signHeaders = loweredKeys_1.loweredKeys(opts.signHeaders);
        const headers = opts.headers;
        let type = headers['content-type'] || headers['Content-Type'];
        if (!type) {
            headers['content-type'] = 'application/jsoncharset=utf-8';
        }
        return this.request('GET', opts);
    }
    delete(opts) {
        opts.headers = loweredKeys_1.loweredKeys(opts.headers);
        opts.signHeaders = loweredKeys_1.loweredKeys(opts.signHeaders);
        const headers = opts.headers;
        let type = headers['content-type'] || headers['Content-Type'];
        if (!type) {
            headers['content-type'] = 'application/jsoncharset=utf-8';
        }
        return this.request('DELETE', opts);
    }
}
exports.default = Base;
//# sourceMappingURL=base.js.map